<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="verifier" class="org.eontechnology.and.eon.app.utils.ConfigHelper" factory-method="verifyNetwork">
        <constructor-arg type="java.lang.String" value="#{systemEnvironment['EON_NETWORK']}"/>
    </bean>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="locations">
            <list>
                <value>WEB-INF/spring/host.properties</value>
                <value>WEB-INF/spring/connection.properties</value>
                <value>classpath:eon_network/#{systemEnvironment['EON_NETWORK']?:"dev"}/network.properties</value>
                <value>classpath:app.properties</value>
            </list>
        </property>
    </bean>

    <bean id="config" class="org.eontechnology.and.eon.app.cfg.Config">

        <property name="dbUrl" value="${network.database}"/>
        <property name="genesisFile" value="${network.genesis}"/>
        <property name="forksFile" value="${network.forks}"/>

        <property name="host" value="${host.address}"/>
        <property name="inner" value="${host.inner}"/>

        <property name="blacklistingPeriod" value="${connection.blacklistingPeriod}"/>
        <property name="readTimeout" value="${connection.readTimeout}"/>
        <property name="connectTimeout" value="${connection.connectTimeout}"/>
        <property name="connectedPoolSize" value="${connection.poolSize}"/>

        <property name="seed" value="#{systemProperties['SECRET_SEED']}"/>

        <property name="fullSync" value="${blockchain.full}"/>
        <property name="useCleaner" value="${blockchain.clean}"/>

        <property name="version" value="${version}"/>

        <property name="publicPeers">
            <bean class="org.eontechnology.and.eon.app.utils.ConfigHelper" factory-method="getStringsFromLastExists">
                <constructor-arg value=";"/>
                <constructor-arg>
                    <list>
                        <value type="java.io.File">classpath:${peers.public}</value>
                        <value type="java.io.File">WEB-INF/spring/peer-public-debug.list</value>
                    </list>
                </constructor-arg>
            </bean>
        </property>
        <property name="innerPeers">
            <bean class="org.eontechnology.and.eon.app.utils.ConfigHelper" factory-method="getStringsFromLastExists">
                <constructor-arg type="java.lang.String" value=";"/>
                <constructor-arg>
                    <list>
                        <value type="java.io.File">classpath:${peers.inner}</value>
                        <value type="java.io.File">WEB-INF/spring/peer-inner-debug.list</value>
                    </list>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <bean id="peerStarter" class="org.eontechnology.and.eon.app.cfg.PeerStarter" factory-method="create">
        <constructor-arg ref="config"/>
    </bean>

    <!-- Run tasks -->
    <bean id="engine" factory-method="init" destroy-method="destory" class="org.eontechnology.and.eon.app.cfg.Engine">
        <constructor-arg ref="peerStarter"/>
    </bean>

</beans>